<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <PackageName>XTrophy</PackageName>
    <PackageId>Expload.XTrophy</PackageId>
    <PackageVersion>$(XTROPHY_VERSION)</PackageVersion>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AssemblyName>$(PackageId)</AssemblyName>
    <WattsLimit>2000000</WattsLimit>
    <PravdaApi>https://publicnode.expload.com/api/public</PravdaApi>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Expload.Pravda" Version="0.*" />
    <!-- If the program is testing in the local environment the following reference to the latest Pravda could be used -->
    <!-- <Reference Include="Expload.Pravda">
      <HintPath>../Pravda/PravdaDotNet/bin/Release/netstandard2.0/Pravda.dll</HintPath>
    </Reference> -->
  </ItemGroup>
  <Target Name="_ResolvePublishNuGetPackagePdbs" AfterTargets="RunResolvePublishAssemblies">
    <ItemGroup>
      <ResolvedFileToPublish Include="@(ResolvedAssembliesToPublish->'%(RootDir)%(Directory)%(Filename).pdb')" RelativePath="$([System.IO.Path]::ChangeExtension(%(ResolvedAssembliesToPublish.DestinationSubPath), '.pdb'))" DestinationSubPath="$([System.IO.Path]::ChangeExtension(%(ResolvedAssembliesToPublish.DestinationSubPath), '.pdb'))" Condition="'%(ResolvedAssembliesToPublish.PackageName)' != '' and Exists('%(RootDir)%(Directory)%(Filename).pdb')" />
    </ItemGroup>
  </Target>
  <Target Name="BuildPravdaAfterPublish" AfterTargets="Publish" Condition="'$(Configuration)' == 'Debug'">
    <Exec Command="pravda compile dotnet -i &quot;bin/Debug/netstandard2.0/publish&quot; -o bin/$(PackageName).pravda --main-class $(PackageId)" />
  </Target>
  <Target Name="DeployPravdaAfterPublish" AfterTargets="Publish" Condition="'$(Configuration)' == 'Deploy'">
    <Exec Command="pravda compile dotnet -i &quot;bin/Deploy/netstandard2.0/publish&quot; -o bin/$(PackageName).pravda --main-class $(PackageId)" />
    <Exec Command="pravda broadcast deploy -i bin/$(PackageName).pravda -w wallet.json -p program-wallet.json -l $(WattsLimit) -e $(PravdaApi)" />
  </Target>
  <Target Name="UpdatePravdaAfterPublish" AfterTargets="Publish" Condition="'$(Configuration)' == 'Update'">
    <Exec Command="pravda compile dotnet -i &quot;bin/Update/netstandard2.0/publish&quot; -o bin/$(PackageName).pravda --main-class $(PackageId)" />
    <Exec Command="pravda broadcast update -i bin/$(PackageName).pravda -w wallet.json -p program-wallet.json -l $(WattsLimit) -e $(PravdaApi)" />
  </Target>
</Project>
